--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: get
  - !ruby/object:RI::MethodSummary 
    name: load_data_private_key
  - !ruby/object:RI::MethodSummary 
    name: load_data_public_key
  - !ruby/object:RI::MethodSummary 
    name: load_private_key
  - !ruby/object:RI::MethodSummary 
    name: load_public_key
comment: 
  - !ruby/struct:SM::Flow::P 
    body: A factory class for returning new Key classes. It is used for obtaining OpenSSL key instances via their SSH names, and for loading both public and private keys. It used used primarily by Net::SSH itself, internally, and will rarely (if ever) be directly used by consumers of the library.
  - !ruby/struct:SM::Flow::VERB 
    body: "  klass = Net::SSH::KeyFactory.get(&quot;rsa&quot;)\n  assert klass.is_a?(OpenSSL::PKey::RSA)\n\n  key = Net::SSH::KeyFacory.load_public_key(&quot;~/.ssh/id_dsa.pub&quot;)\n"
constants: 
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Specifies the mapping of SSH names to OpenSSL key classes.
    name: MAP
    value: "{       \"dh\"  => OpenSSL::PKey::DH,       \"rsa\" => OpenSSL::PKey::RSA,       \"dsa\" => OpenSSL::PKey::DSA"
full_name: Net::SSH::KeyFactory
includes: 
  - !ruby/object:RI::IncludedModule 
    name: Prompt
instance_methods: []

name: KeyFactory
superclass: Object
