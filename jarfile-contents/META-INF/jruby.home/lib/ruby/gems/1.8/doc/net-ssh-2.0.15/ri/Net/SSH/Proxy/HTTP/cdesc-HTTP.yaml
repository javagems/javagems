--- !ruby/object:RI::ClassDescription 
attributes: 
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: The map of additional options that were given to the object at initialization.
    name: options
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: The hostname or IP address of the HTTP proxy.
    name: proxy_host
    rw: R
  - !ruby/object:RI::Attribute 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: The port number of the proxy.
    name: proxy_port
    rw: R
class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: new
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "An implementation of an HTTP proxy. To use it, instantiate it, then pass the instantiated object via the :proxy key to Net::SSH.start:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  require 'net/ssh/proxy/http'\n\n  proxy = Net::SSH::Proxy::HTTP.new('proxy.host', proxy_port)\n  Net::SSH.start('host', 'user', :proxy =&gt; proxy) do |ssh|\n    ...\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: "If the proxy requires authentication, you can pass :user and :password to the proxy's constructor:"
  - !ruby/struct:SM::Flow::VERB 
    body: "  proxy = Net::SSH::Proxy::HTTP.new('proxy.host', proxy_port,\n     :user =&gt; &quot;user&quot;, :password =&gt; &quot;password&quot;)\n"
  - !ruby/struct:SM::Flow::P 
    body: Note that HTTP digest authentication is not supported; Basic only at this point.
constants: []

full_name: Net::SSH::Proxy::HTTP
includes: []

instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: open
name: HTTP
superclass: Object
